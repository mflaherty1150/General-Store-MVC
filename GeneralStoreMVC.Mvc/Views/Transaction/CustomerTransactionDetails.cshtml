@model IEnumerable<GeneralStoreMVC.Models.TransactionModels.TransactionForCustomerDetail>

@{
    ViewData["Title"] = "Transaction Index";
}

<h1 class="text-center">Review Transactions For Customer</h1>

<table class="table table-striped-colums table-dark table-hover table-bordered border-danger">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfTransaction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionTotal)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfTransaction)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionTotal)
            </td>
        </tr>
}
    </tbody>
</table>
